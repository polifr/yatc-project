server:
  port: 8080
  shutdown: graceful

spring.lifecycle.timeout-per-shutdown-phase: 10s

spring:
  main:
    banner-mode: off
  application:
    name: ms-spring-reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://yatc-keycloak/realms/yatc-realm

management:
  tracing:
    enabled: true
  endpoint:
    health:
      access: read-only
      probes:
        enabled: true
      show-details: always
    info:
      access: read-only
    metrics:
      access: read-only
    prometheus:
      access: read-only
  endpoints: 
    access:
      default: none
    web:
      exposure:
        include:
        - health
        - info
        - metrics
        - prometheus

logging:
  level:
    it:
      poli: DEBUG
    org:
      apache:
        kafka: INFO
      springframework:
        kafka: INFO
        cloud:
          stream: INFO

---
spring.config.activate.on-profile: docker

spring:
  main:
    banner-mode: off
  application:
    name: ms-spring-reactive
  cloud:
    stream:
      kafka:
        binder:
          brokers: yatc-kafka:9092
          auto-create-topics: true
          enable-observation: true
          consumer-properties:
            auto:
              offset:
                reset: earliest
            spring:
              json:
                trusted:
                  packages: "*"
            key:
              deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          configuration:
            acks: all
