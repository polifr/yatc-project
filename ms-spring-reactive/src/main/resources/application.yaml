server:
  port: 8080
  shutdown: graceful

spring.lifecycle.timeout-per-shutdown-phase: 10s

spring:
  main:
    banner-mode: off
  application:
    name: ms-spring-reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://yatc-keycloak/realms/yatc-realm
  threads:
    virtual:
      enabled: true

management:
  tracing:
    enabled: true
  endpoint:
    health:
      access: read-only
      probes:
        enabled: true
      show-details: always
    info:
      access: read-only
    metrics:
      access: read-only
    prometheus:
      access: read-only
  endpoints: 
    access:
      default: none
    web:
      exposure:
        include:
        - health
        - info
        - metrics
        - prometheus

logging:
  level:
    it:
      poli: DEBUG
    org:
      apache:
        kafka: INFO
      springframework:
        kafka: INFO
        cloud:
          stream: INFO

---
spring.config.activate.on-profile: docker

spring:
  main:
    banner-mode: off
  application:
    name: ms-spring-reactive
  cloud:
    function:
      definition: testEventReactiveConsumer;testPollingEventReactiveProducer
    stream:
      default-binder: kafka
      bindings:
        testEventReactiveConsumer-in-0:
          destination: yatc-test-topic
          content-type: application/json
          group: ${spring.application.name}
        testPollingEventReactiveProducer-out-0:
          destination: yatc-test-topic
          producer:
            poller:
              fixed-delay: 10000
              initial-delay: 5000
      kafka:
        binder:
          brokers: yatc-kafka:9092
          auto-create-topics: true
          enable-observation: true
          consumer-properties:
            allow:
              auto:
                create:
                  topics: true
            auto:
              offset:
                reset: earliest
            enable:
              metrics:
                push: false
            spring:
              json:
                trusted:
                  packages: "*"
            key:
              deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          producer-properties:
            allow:
              auto:
                create:
                  topics: true
            enable:
              metrics:
                push: false
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          configuration:
            acks: all
