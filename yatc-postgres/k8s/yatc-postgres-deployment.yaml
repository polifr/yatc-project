apiVersion: apps/v1
kind: Deployment
metadata:
  name: yatc-postgres
  labels:
    app: yatc-postgres
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: yatc-postgres
  template:
    metadata:
      labels:
        app: yatc-postgres
    spec:
      containers:
      - name: yatc-postgres
        image: postgres:17-alpine
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 50Mi
        ports:
        - containerPort: 5432
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U 
            - ${POSTGRES_USER}
            - -d
            - ${POSTGRES_DB}
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U 
            - ${POSTGRES_USER}
            - -d
            - ${POSTGRES_DB}
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 3
          failureThreshold: 2
          successThreshold: 1
        env:
        - name: "TZ"
          value: "Europe/Rome"
        envFrom:
        - secretRef:
            name: yatc-postgres-secret
        volumeMounts:
        - name: yatc-postgres-init-config
          mountPath: "/docker-entrypoint-initdb.d/pg-init.sql"
          subPath: "pg-init.sql"
      volumes:
      - name: yatc-postgres-init-config
        configMap:
          name: yatc-postgres-init-config
