# Fase 1 - Compilazione tramite GraalVM
# Ref -> https://github.com/orgs/graalvm/packages
# Ref -> https://dev.to/binoy_59380e698d318/build-native-image-from-spring-boot-application-with-graalvm-builder-3b7l
FROM ghcr.io/graalvm/native-image-community:25-muslib AS builder

# Install Maven
ARG USER_HOME_DIR="/root"
ARG SHA=bcfe4fe305c962ace56ac7b5fc7a08b87d5abd8b7e89027ab251069faebee516b0ded8961445d6d91ec1985dfe30f8153268843c89aa392733d1a3ec956c9978
ARG MAVEN_DOWNLOAD_URL=https://dlcdn.apache.org/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz
 
RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${MAVEN_DOWNLOAD_URL} \
  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  && rm -f /tmp/apache-maven.tar.gz \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
 
ENV MAVEN_HOME="/usr/share/maven"
ENV MAVEN_CONFIG="$USER_HOME_DIR/.m2"

WORKDIR /opt/app

COPY .mvn/ .mvn
COPY mvnw pom.xml ./

# RUN ./mvnw dependency:go-offline

COPY ./src ./src
RUN mvn clean package --no-transfer-progress -Pnative -DskipTests

# Fase 2 - Creazione immagine con applicazione nativa
# Si usa la stessa versione dell'immagine usata per la compilazione
FROM oraclelinux:9

EXPOSE 8080
EXPOSE 18080

ENV SPRING_JMX_ENABLED=false

# Impostazione timezone
ENV TIME_ZONE=Europe/Rome
ENV TZ=$TIME_ZONE
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
RUN echo $TZ > /etc/timezone

# Copy the native executable into the containers
RUN mkdir -p /opt/app
COPY --from=builder /opt/app/target/gw-spring-cloud /opt/app

WORKDIR /opt/app

RUN groupadd -g 2222 -r yatcusr
RUN useradd -u 2222 -g 2222 --no-log-init -r yatcusr
USER 2222:2222

ENTRYPOINT ["/opt/app/gw-spring-cloud", "--spring.profiles.active=docker"]
